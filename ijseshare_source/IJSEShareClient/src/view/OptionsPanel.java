/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.io.*;
import java.util.StringTokenizer;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author ravindu
 */
public class OptionsPanel extends javax.swing.JPanel {
    private JFrame parent;

    private String port;
    private String ip;
    private String path = ""; // "/home/ravindu/ijseshare/bin/";
    /**
     * Creates new form OptionsPanel
     */
    public OptionsPanel(JFrame parent) {
        initComponents();
        this.parent = parent;
        readConfig();
    }
    
     private  void readConfig() {
        try {
            File file = new File(path + "ijseshare.config");
            BufferedReader br = new BufferedReader(new FileReader(file));

            br.readLine();
            String s = "";
            while ((s = br.readLine()) != null && !s.trim().isEmpty()) {
                StringTokenizer st = new StringTokenizer(s, "=");
                String w = st.nextToken().trim();
                if (w.equals("port")) {
                    String p = st.nextToken().trim();
                    port = p;
                    txtPort.setText(p);
               }  else if (w.trim().equals("ip")) {
                    String p = st.nextToken().trim();
                    ip = p;
                    txtIp.setText(p);
                }
            }

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(parent, ex.getMessage(),"error",JOptionPane.ERROR);
            if (parent instanceof MainFrame) {
                MainFrame m = new MainFrame();
                m.addToPanel(new OptionsPanel(m));
                        
            }
        }
     }
     
      private void writeConfigFile() {

        if (!txtPort.getText().trim().equals(port) || !txtIp.getText().trim().equals(ip)) {
            port = txtPort.getText();
            ip = txtIp.getText();

            try {
                File file = new File(path + "ijseshare.config");
                BufferedWriter br = new BufferedWriter(new FileWriter(file));
                br.write("#eims configuration file\n"
                        + "port = " + port + " \n"
                        + "ip   = " + ip + " \n");
                br.close();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "unable to save ip and port", "error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtPort = new javax.swing.JTextField();
        txtIp = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        jButton1.setText("Connect");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("port :");

        txtPort.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPortKeyReleased(evt);
            }
        });

        txtIp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIpKeyReleased(evt);
            }
        });

        jLabel3.setText("ip :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(44, 44, 44)
                        .addComponent(txtIp, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(44, 44, 44)
                        .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(26, 26, 26)
                .addComponent(jButton1)
                .addContainerGap(184, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtPortKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPortKeyReleased
      
    }//GEN-LAST:event_txtPortKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        writeConfigFile();
        if (parent instanceof MainFrame) {
            MainFrame m = (MainFrame) parent;
            m.connect(txtIp.getText(),txtPort.getText());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtIpKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIpKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIpKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtIp;
    private javax.swing.JTextField txtPort;
    // End of variables declaration//GEN-END:variables
}
